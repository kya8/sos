BasedOnStyle: LLVM

ColumnLimit: 160

UseTab: Never
IndentWidth: 4
TabWidth: 4
AccessModifierOffset: -4
IndentCaseLabels: false
NamespaceIndentation: None

SpaceAfterTemplateKeyword: false

AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: false
AlwaysBreakTemplateDeclarations: Yes
AlwaysBreakAfterReturnType: All
AlwaysBreakAfterDefinitionReturnType: All

FixNamespaceComments: true
AlignTrailingComments: true

PointerAlignment: Left
ReferenceAlignment: Pointer

AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: true
AlignAfterOpenBracket: Align

AllowShortLambdasOnASingleLine: Inline

AlignArrayOfStructures: Right
AlignEscapedNewlines: Left

AlignConsecutiveAssignments:
  Enabled:          false
  AcrossEmptyLines: false
  AcrossComments:   false
  AlignCompound:    true
  PadOperators:     true
AlignConsecutiveBitFields:
  Enabled:          true
  AcrossEmptyLines: false
  AcrossComments:   false
AlignConsecutiveDeclarations:
  Enabled:          true
  AcrossEmptyLines: false
  AcrossComments:   false
  AlignFunctionPointers: false
AlignConsecutiveShortCaseStatements:
  Enabled:          true
  AcrossEmptyLines: false
  AcrossComments:   true
  AlignCaseColons:  true

BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: false
  AfterStruct: false
  AfterUnion: false
  AfterControlStatement: MultiLine
  AfterEnum: false
  AfterFunction: true
  AfterNamespace: false
  AfterExternBlock: false
  BeforeCatch: true
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
